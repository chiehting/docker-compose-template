events {
    worker_connections 1024;
}

# MQTT TCP 負載均衡
stream {
    upstream emqx_tcp {
        least_conn;
        # server emqx-core-1.emqx.local:1883 weight=3;
        # server emqx-core-2.emqx.local:1883 weight=3;
        server emqx-replicant-1.emqx.local:1883 weight=2 max_fails=3 fail_timeout=10s;
        server emqx-replicant-2.emqx.local:1883 weight=2 max_fails=3 fail_timeout=10s;
    }

    upstream emqx_ssl {
        least_conn;
        # server emqx-core-1.emqx.local:8883 weight=3;
        # server emqx-core-2.emqx.local:8883 weight=3;
        server emqx-replicant-1.emqx.local:8883 weight=2 max_fails=3 fail_timeout=10s;
        server emqx-replicant-2.emqx.local:8883 weight=2 max_fails=3 fail_timeout=10s;
    }

    server {
        listen 1883;
        proxy_pass emqx_tcp;
        proxy_timeout 24h;
        proxy_connect_timeout 60s;
        proxy_socket_keepalive on;
        proxy_buffer_size 4k;
        error_log /var/log/nginx/emqx_tcp.log;
    }

    server {
        listen 8883;
        proxy_pass emqx_ssl;
        proxy_timeout 24h;
        proxy_connect_timeout 60s;
        proxy_socket_keepalive on;
        proxy_buffer_size 4k;
        error_log /var/log/nginx/emqx_ssl.log;
    }
}

# HTTP/WebSocket 負載均衡
http {
    upstream emqx_dashboard {
        server emqx-core-1.emqx.local:18083;
        server emqx-core-2.emqx.local:18083;
    }
    server {
        listen 18083;
        location / {
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_pass http://emqx_dashboard;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}